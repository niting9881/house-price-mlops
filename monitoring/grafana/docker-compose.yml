version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: mlops-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
      - ./dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: mlops-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped

  # Model metrics exporter
  model-exporter:
    build:
      context: ../..
      dockerfile: monitoring/grafana/Dockerfile.exporter
    container_name: mlops-model-exporter
    ports:
      - "8001:8001"
    environment:
      - METRICS_DB_PATH=/app/data/metrics.db
      - PROMETHEUS_PORT=8001
    volumes:
      - ./simple_model_exporter.py:/app/simple_model_exporter.py
    command: ["python", "simple_model_exporter.py"]
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  grafana-storage:
  prometheus-storage:

networks:
  monitoring:
    driver: bridge
